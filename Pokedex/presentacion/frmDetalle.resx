<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuLi4LOicnDTonJw06JycNOicnDTonJw06JycNOicnDTon
        Jw06JycNOicnDTonJw06JycNOicnDTonJw06JycNOicnDTonJw06JycNLi4uCwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI4NDJ5VlJM5nBrY/9xbGT/cWxk/3FsZP9xbGT/cWxk/3Fs
        ZP9xbGT/cWxk/11ZU/9dWVL/cWxk/3FsZP9xbGT/cWxk/3FsZP9xbGT/cWxk/3FsZP9wa2P/VlJM5jg0
        MnkAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOTYzlpqVif/c1sT/3dfF/93Xxf/d18X/3dfF/93X
        xf/d18X/3dfF/93Xxf/d18X/ysS0/8rEtP/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93X
        xf/c1sT/mpWJ/zk2M5YAAAAAAAAAAAAAAAAAAAAAAAAAADQ0LSd2cWn+3dfF/93Xxf/d18X/3dfF/93X
        xf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf+1sKH/ta+h/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/9zW
        xP/Uzr3/1M68/9jTwf/d18X/dnFp/jo0LScAAAAAAAAAAAAAAAAAAAAAOTQxYqehlP/d18X/3dfF/93X
        xf/d18X/3dfF/93Xxf/d18X/3dfF/9/ZyP/k39D/6OPW/6umnf+rpp3/6OPW/+Tf0P/f2cj/3dfF/93X
        xf/d18X/xL6u/3JtZf9ybWX/mpWJ/93Xxf+noZT/ODMwYwAAAAAAAAAAAAAAAAAAAAA5NDJqraia/93X
        xf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/i3c3/6eTX/9zXy/+yrqT/enZv/3p2b/+yrqT/3NfL/+nk
        1//i3c3/3dfF/93Xxf/Evq7/cGtj/29rY/+ZlIj/3dfF/62omv85NDJrAAAAAAAAAAAAAAAAAAAAADk0
        MmqtqJr/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/4t3N/9HNwf94c23/end1/66sq//Ix8b/yMfG/66s
        q/96d3X/eHNt/9HMwf/i3c3/3dfF/9PNvP+oopX/qKKV/7+5qv/d18X/raia/zk0MmsAAAAAAAAAAAAA
        AAAAAAAAOTQyaq2omv/d18X/3dfF/93Xxf/d18X/3dfF/9/Zx/+wrKL/cW5r/+Hg4P/+/v7/+/r4//n4
        9P/5+PT/+/r4//7+/v/h4OD/cW1r/7Crov/f2cf/zMa2/5aRhv+WkYb/saud/93Xxf+tqJr/OTQyawAA
        AAAAAAAAAAAAAAAAAAA5NDJqraia/93Xxf/d18X/3dfF/93Xxf/d18X/sq2h/317ef/39vP/8e7m/+vm
        2v/q5dj/6uXY/+rl2P/q5dj/6+ba//Hu5v/39vP/fnt5/7Ktof/d18X/3dfF/93Xxf/d18X/3dfF/62o
        mv85NDJrAAAAAAAAAAAAAAAAAAAAADk0MmqtqJr/3dfF/93Xxf/d18X/3dfF/9HMu/9pZWH/7erj/+rl
        2P/q5dj/6uXY/+rl2P/q5dj/6uXY/+rl2P/q5dj/6uXY/+rl2P/t6uP/aWVh/9HLuv/d18X/3dfF/93X
        xf/d18X/raia/zk0MmsAAAAAAAAAAAAAAAAAAAAAOTQyaq2omv/d18X/3dfF/93Xxf/d18X/i4Z8/7u3
        r//q5dj/6uXY/+rl2P/q5dj/3tjK/7SvoP+0r6D/3tjK/+rl2P/q5dj/6uXY/+rl2P+8uK//i4Z7/93X
        xf/d18X/3dfF/93Xxf+tqJr/OTQyawAAAAAAAAAAAAAAAAAAAAA5NDJqraia/93Xxf/d18X/3dfF/93X
        xf9mYVv/6eTX/+rl2P/q5dj/6uXY/9TPwv9jX1n/k5GQ/5ORkP9jX1n/1M/C/+rl2P/q5dj/6uXY/+nk
        1/9mYVv/3dfF/93Xxf/d18X/3dfF/62omv85NDJrAAAAAAAAAAAAAAAAAAAAADk0MmqtqJr/3dfF/93X
        xf/d18X/0sy7/3dybP/q5dj/6uXY/+rl2P/q5dj/eHRt/9DMxP/9/f3//////93c3P94dG7/6uXY/+rl
        2P/q5dj/6uXY/3dybP/Ry7r/3dfF/93Xxf/d18X/raia/zk0MmsAAAAAAAAAAAAAAAAAAAAAOTQyaq2o
        mv/d18X/3dfF/93Xxf/Dvq7/VFBL/3dzbP93c2z/d3Ns/3dzbP9iXln/6uXY/+7r4f/9/f3//////2dj
        Yf93c2z/d3Ns/3dzbP93c2z/VFBL/8O9rv/d18X/3dfF/93Xxf+tqJr/OTQyawAAAAAAAAAAAAAAAAAA
        AAA5NDJqraia/93Xxf/d18X/3dfF/8rEtP8uK3//Gxvy/xsb8v8bG/L/Gxvy/0E9Z//k39L/6uXY/+7r
        4f/39vb/Q0Bq/xsb8v8bG/L/Gxvy/xsb8v8tK3//ycSz/93Xxf/d18X/3dfF/62omv85NDJrAAAAAAAA
        AAAAAAAAAAAAADk0MmqtqJr/3dfF/93Xxf/d18X/29XD/zs4aP8aGv//Ghr//xoa//8aGv//IyLE/29r
        af/Mx7z/zMe8/3Bsa/8jIsT/Ghr//xoa//8aGv//Ghr//zs4aP/b1cP/3dfF/93Xxf/d18X/raia/zk0
        MmsAAAAAAAAAAAAAAAAAAAAAOTQyaq2omv/d18X/3dfF/93Xxf/d18X/cGtm/yIi5/8aGv//Ghr//xoa
        //8aGv//IB/W/yspjP8rKYz/IB/W/xoa//8aGv//Ghr//xoa//8iIuj/cGtm/93Xxf/d18X/3dfF/93X
        xf+tqJr/OTQyawAAAAAAAAAAAAAAAAAAAAA5NDJqraia/93Xxf/d18X/3dfF/93Xxf+5s6X/TEmF/ykp
        //8aGv//Ghr//xoa//8aGv//Ghr//xoa//8aGv//Ghr//xoa//8aGv//KSn//0xJhf+5s6T/3dfF/93X
        xf/d18X/3dfF/62omv85NDJrAAAAAAAAAAAAAAAAAAAAADk0MmqtqJr/3dfF/93Xxf/d18X/3dfF/93X
        xf99eG//bGu9/0pK//8dHf//Ghr//xoa//8aGv//Ghr//xoa//8aGv//HR3//0pK//9sa77/fHhv/93X
        xf/d18X/3dfF/93Xxf/d18X/raia/zk0MmsAAAAAAAAAAAAAAAAAAAAAOTQyaq2omv/d18X/3dfF/93X
        xf/d18X/3dfF/9nTwf9saGP/b22z/4aG/v9kZP//TEz//0BA//9AQP//TEz//2Rk//+Ghv7/b26z/2xo
        Y//Z08H/3dfF/93Xxf/d18X/3dfF/93Xxf+tqJr/OTQyawAAAAAAAAAAAAAAAAAAAAA5NDJqraia/93X
        xf/d18X/3NbE/9vVw//d18X/3dfF/9rUwv+Lhnz/VVJu/3d1xf+MjPn/j4///4+P//+MjPn/d3XF/1ZT
        bv+Lhnv/2tTC/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/62omv85NDJrAAAAAAAAAAAAAAAAAAAAADk0
        MmqtqJr/3dfF/9XPvf97dmz/aWVc/7m0pP/d18X/3dfF/93Xxf/Mxrb/kYuA/2llYP9eWmT/Xlpk/2ll
        YP+Qi4D/zMa2/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/raia/zk0MmsAAAAAAAAAAAAA
        AAAAAAAAOTQyarGsoP/d18X/hoF3/z61ZP9W64n/T2JP/9vVw//d18X/3dfF/93Xxf/d18X/3dfF/93X
        xf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf+xrKD/OTQyawAA
        AAAAAAAAAAAAAAAAAAA5NDJqtrGn/+Tf0P93c2r/K9Bf/0Dxe/9GbE7/2dPB/93Xxf/d18X/3dfF/93X
        xf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/e2Mf/5N/Q/7ay
        p/85NDJrAAAAAAAAAAAAAAAAAAAAADkzMFmoo5r/6uXY/8zHu/9NYU3/OmVD/5uXjv/h3Mv/3dfF/93X
        xf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/4dzL/+nk1//p5Nf/6eTX/+nk
        1//q5dj/qKOa/zk2MFkAAAAAAAAAAAAAAAAAAAAAMzMzFGRgWvTo49b/6uXY/+nk1//n4tX/6uXY/+Lc
        zP/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/i3Mz/6uXY/+rl
        2P/q5dj/6uXY/+jj1v9kYFr0MzMzFAAAAAAAAAAAAAAAAAAAAAAAAAAAODYwXnVxavzW0cX/6uXY/+rl
        2P/q5dj/5uHS/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/93Xxf/d18X/3dfF/+bg
        0v/q5dj/6uXY/+rl2P/W0cX/dXFq/Dg1M18AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjIyODk2
        M6NJREDGSUZCyElGQsh3cmz95+LV/+Xg0f/l4NH/5eDR/+Xg0f/l4NH/5eDR/+Xg0f/l4NH/5eDR/+Xg
        0f/n4tX/d3Ns/UlGQshJRkLISURAxjk2M6M2MjI4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGlkX/jq5dj/6uXY/+rl2P/q5dj/6uXY/+rl2P/q5dj/6uXY/+rl
        2P/q5dj/6uXY/+rl2P9pZV/4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUU1I2uPe0v/q5dj/6uXY/+rl2P/q5dj/6uXY/+rl
        2P/q5dj/6uXY/+rl2P/q5dj/49/S/1FNSdoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6MzNBVlJN5nVxav91cWr/dXFq/3Vx
        av91cWr/dXFq/3Vxav91cWr/dXFq/3Vxav9WUk3mOTYyQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKioqDDon
        Jw06JycNOicnDTonJw06JycNOicnDTonJw06JycNKioqDAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAP+AAAAfgAAAHwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPgAAAH8AAAD/+AAf//gAH//4AB///AA/8=
</value>
  </data>
</root>